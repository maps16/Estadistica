xobs<-x[1:n]
EMVlambda[i]<-mean(xobs)
}
plot(seq(1,M,1),EMVlambda,type="b",pch=19,cex=0.5,xlab="n",ylab="Media",cex.lab=1.25,
main="Comportamiento del EMV: Caso Poisson",cex.main=1.5)
segments(0,Lambda0,M,Lambda0,lwd=2,col=4,lty=1)
#ESCENARIO DE SIMULACION
Lambda0<-50
M<-100000
#DATOS SIMULADOS
x<-rpois(M,lambda=Lambda0)
#CLACULO DEL EMV PARA n=1,2,...,M
EMVlambda<-c()
for(i in 1:M)
{
n<-i
xobs<-x[1:n]
EMVlambda[i]<-mean(xobs)
}
#ESCENARIO DE SIMULACION
Lambda0<-50
M<-10000
#DATOS SIMULADOS
x<-rpois(M,lambda=Lambda0)
#CLACULO DEL EMV PARA n=1,2,...,M
EMVlambda<-c()
for(i in 1:M)
{
n<-i
xobs<-x[1:n]
EMVlambda[i]<-mean(xobs)
}
plot(seq(1,M,1),EMVlambda,type="b",pch=19,cex=0.5,xlab="n",ylab="Media",cex.lab=1.25,
main="Comportamiento del EMV: Caso Poisson",cex.main=1.5)
segments(0,Lambda0,M,Lambda0,lwd=2,col=4,lty=1)
#ESCENARIO DE SIMULACION
Lambda0<-50
M<-10000
#DATOS SIMULADOS
x<-rpois(M,lambda=Lambda0)
#CLACULO DEL EMV PARA n=1,2,...,M
EMVlambda<-c()
for(i in 1:M)
{
n<-i
xobs<-x[1:n]
EMVlambda[i]<-mean(xobs)
}
plot(seq(1,M,1),EMVlambda,type="b",pch=19,cex=0.5,xlab="n",ylab="Media",cex.lab=1.25,
main="Comportamiento del EMV: Caso Poisson",cex.main=1.5)
segments(0,Lambda0,M,Lambda0,lwd=2,col=4,lty=1)
#PROGRAMA: SIMULACION DE DATOS NORMALES EN UN CONTEXTO FISICO
#Se suelta una esfera de acero de radio 'r' con densidad 'rho_a'
#en un tanque con glicerina con densidad 'rho_g' y viscosidad 'eta_g'
#para obtener un perfil de velocidades terminales 'vT'
#ESCENARIO DE SIMULACION
r=0.05     #en metros
rho_a=7800 #en kg/m^3
rho_g=1260 #en kg/m^3
eta_g=149  #en Paxs
g=9.81     #en m/s^2
#LEY DE STOKES
k=6*pi*r*eta_g
V=(4*pi*r^3)/3
m=V/rho_a
#VELOCIDAD TERMINAL
vt1=2*r*r*g*(rho_a-rho_g)
vt2=9*eta_g
vT=vt1/vt2
#ANALIZANDO LA VELOCIDAD
t=seq(0,1,0.001)
xx=(-k*t)/m
v=vT*(1-exp(xx)) #AQUI ESTÁ EL PROBLEMA :@
v
xx
exp(xx)
xx
exp(-1)
exp(-100)
exp(-200)
exp(-1000)
#ESCENARIO DE SIMULACION
r=0.005     #en metros
rho_a=7800 #en kg/m^3
rho_g=1260 #en kg/m^3
eta_g=149  #en Paxs
g=9.81     #en m/s^2
#LEY DE STOKES
k=6*pi*r*eta_g
V=(4*pi*r^3)/3
m=V/rho_a
#VELOCIDAD TERMINAL
vt1=2*r*r*g*(rho_a-rho_g)
vt2=9*eta_g
vT=vt1/vt2
#ANALIZANDO LA VELOCIDAD
t=seq(0,1,0.001)
xx=(-k*t)/m
v=vT*(1-exp(xx)) #AQUI ESTÁ EL PROBLEMA :@
exp(xx)
setwd("~/Documents/MisCursos/EstadisticaLicFisica/ProgramasClase")
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#DENSIDAD ESTIMADA Y EL HISTOGRAMA
EMVlambda<-mean(x)
hist(x, freq = FALSE)
curve(dexp(x,1/EMVlambda), col = 2, lty = 2, lwd = 2, add = TRUE)
z<-seq(0,max(x)+5,0.1)
z
Festimada<-pexp(z,1/EMVlambda)
Festimada
Fempirica<-ecdf(x)
Fempirica
plot(Fempirica,main="Funciones de probabilidad acumuladas")
points(z,Festimada,type="l",lwd=2,lty=1,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#DENSIDAD ESTIMADA Y EL HISTOGRAMA
EMVlambda<-mean(x)
hist(x, freq = FALSE)
curve(dexp(x,1/EMVlambda), col = 2, lty = 2, lwd = 2, add = TRUE)
#FUNCION DE DISTRIBUCION ESTIMADA Y LA DISTRIBUCIÓN EMPIRICA
z<-seq(0,max(x)+5,0.1)
Festimada<-pexp(z,1/EMVlambda)
Fempirica<-ecdf(x)
plot(Fempirica,main="Funciones de probabilidad acumuladas")
points(z,Festimada,type="l",lwd=2,lty=1,col=4)
#ESCENARIO DE SIMULACION: DATOS NORMALES - SE AJUSTA MODELO EXPONENCIAL
Media0<-2
Sd0<-0.5
n<-100
#DATOS SIMULADOS
x<-rnorm(n,Media0,Sd0)
#DENSIDAD ESTIMADA Y EL HISTOGRAMA
EMVlambda<-mean(x)
hist(x, freq = FALSE)
curve(dexp(x,1/EMVlambda), col = 2, lty = 2, lwd = 2, add = TRUE)
#FUNCION DE DISTRIBUCION ESTIMADA Y LA DISTRIBUCIÓN EMPIRICA
z<-seq(0,max(x)+5,0.1)
Festimada<-pexp(z,1/EMVlambda)
Fempirica<-ecdf(x)
plot(Fempirica,main="Funciones de probabilidad acumuladas")
points(z,Festimada,type="l",lwd=2,lty=1,col=4)
DatosTerremotos<-read.csv("all_month.csv")
Xobs<-DatosTerremotos$mag
DatosTerremotos<-read.csv("all_month.csv")
Xobs<-DatosTerremotos$mag
FEmpTERREMOTOS<-ecdf(Xobs)
plot(FEmpTERREMOTOS)
seq(1,n,1)
seq(1,n,1)/n
(seq(1,n,1)-0.5)/n
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QTE
QE<-sort(x)
QE
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25)
plot(QTE,QE,type="p",pch=19,cex=1.25)
segments(0.0,100,100,col=4)
plot(QTE,QE,type="p",pch=19,cex=1.25)
segments(0,0,100,100,col=4)
plot(QTE,QE,type="p",pch=19,cex=1.25)
segments(0,0,100,100,lty=2,col=4)
plot(QTE,QE,type="p",pch=19,cex=1.25)
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,80),ylim=c(0,80))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,70),ylim=c(0,70))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,70),ylim=c(0,70))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS NORMALES - SE AJUSTA MODELO EXPONENCIAL
Media0<-2
Sd0<-0.5
n<-100
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS NORMALES - SE AJUSTA MODELO EXPONENCIAL
Media0<-2
Sd0<-0.5
n<-100
#DATOS SIMULADOS
x<-rnorm(n,Media0,Sd0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS NORMALES - SE AJUSTA MODELO EXPONENCIAL
Media0<-2
Sd0<-0.5
n<-100
#DATOS SIMULADOS
x<-rnorm(n,Media0,Sd0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,20),ylim=c(0,20))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS NORMALES - SE AJUSTA MODELO EXPONENCIAL
Media0<-2
Sd0<-0.5
n<-100
#DATOS SIMULADOS
x<-rnorm(n,Media0,Sd0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25)
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
#ESCENARIO DE SIMULACION: DATOS EXPONENCIALES - SE AJUSTA MODELO EXPONENCIAL
Lambda0<-10
n<-50
#DATOS SIMULADOS
x<-rexp(n,1/Lambda0)
#GRAFICA Q-Q-PLOT
EMVlambda<-mean(x)
valpha<-(seq(1,n,1)-0.5)/n
QTE<-qexp(valpha,1/EMVlambda)
QE<-sort(x)
plot(QTE,QE,type="p",pch=19,cex=1.25,xlim=c(0,60),ylim=c(0,60))
segments(0,0,100,100,lwd=2,col=4)
